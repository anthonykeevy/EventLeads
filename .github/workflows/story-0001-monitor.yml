name: Story 0001 Change Monitor

# Monitor changes to Story 0001 core files and alert when regression testing may be needed
on:
  pull_request:
    paths:
      # Backend Core Files
      - 'backend/app/routers/auth.py'
      - 'backend/app/models/user.py'
      - 'backend/app/models/emailverificationtoken.py'
      - 'backend/app/models/passwordresettoken.py'
      - 'backend/app/models/authevent.py'
      - 'backend/app/utils/security.py'
      - 'backend/app/schemas/auth.py'
      - 'backend/app/core/settings.py'
      
      # Frontend Core Files
      - 'frontend/src/app/signup/page.tsx'
      - 'frontend/src/app/login/page.tsx'
      - 'frontend/src/app/verify/page.tsx'
      - 'frontend/src/app/resend/page.tsx'
      - 'frontend/src/app/reset/request/page.tsx'
      - 'frontend/src/app/reset/confirm/page.tsx'
      - 'frontend/src/lib/auth.ts'
      - 'frontend/src/lib/api.ts'
      
      # Configuration Files
      - '.env.dev'
      - 'docs/shards/02-data-schema.md'
      
      # Database Migrations
      - 'backend/migrations/versions/a013_*.py'
      
      # Documentation Files
      - 'docs/stories/0001-auth-org-foundation.md'
      - 'docs/story-0001-uat-signoff-checklist.md'
      - 'docs/story-0001-implementation-walkthrough.md'

  push:
    branches: [ main, develop ]
    paths:
      # Same paths as pull_request
      - 'backend/app/routers/auth.py'
      - 'backend/app/models/user.py'
      - 'backend/app/models/emailverificationtoken.py'
      - 'backend/app/models/passwordresettoken.py'
      - 'backend/app/models/authevent.py'
      - 'backend/app/utils/security.py'
      - 'backend/app/schemas/auth.py'
      - 'backend/app/core/settings.py'
      - 'frontend/src/app/signup/page.tsx'
      - 'frontend/src/app/login/page.tsx'
      - 'frontend/src/app/verify/page.tsx'
      - 'frontend/src/app/resend/page.tsx'
      - 'frontend/src/app/reset/request/page.tsx'
      - 'frontend/src/app/reset/confirm/page.tsx'
      - 'frontend/src/lib/auth.ts'
      - 'frontend/src/lib/api.ts'
      - '.env.dev'
      - 'docs/shards/02-data-schema.md'
      - 'backend/migrations/versions/a013_*.py'
      - 'docs/stories/0001-auth-org-foundation.md'
      - 'docs/story-0001-uat-signoff-checklist.md'
      - 'docs/story-0001-implementation-walkthrough.md'

jobs:
  story-0001-monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history
    
    - name: Detect Story 0001 changes
      id: detect-changes
      run: |
        echo "üîç Checking for Story 0001 file changes..."
        
        # Get all files in the current commit
        echo "Getting all files in current commit"
        ALL_FILES=$(git ls-tree -r --name-only HEAD)
        
        # Story 0001 core files
        STORY_0001_FILES=(
          "backend/app/routers/auth.py"
          "backend/app/models/user.py"
          "backend/app/models/emailverificationtoken.py"
          "backend/app/models/passwordresettoken.py"
          "backend/app/models/authevent.py"
          "backend/app/utils/security.py"
          "backend/app/schemas/auth.py"
          "backend/app/core/settings.py"
          "frontend/src/app/signup/page.tsx"
          "frontend/src/app/login/page.tsx"
          "frontend/src/app/verify/page.tsx"
          "frontend/src/app/resend/page.tsx"
          "frontend/src/app/reset/request/page.tsx"
          "frontend/src/app/reset/confirm/page.tsx"
          "frontend/src/lib/auth.ts"
          "frontend/src/lib/api.ts"
          ".env.dev"
          "docs/shards/02-data-schema.md"
          "backend/migrations/versions/a013_convert_boolean_fields_to_bit.py"
          "docs/stories/0001-auth-org-foundation.md"
          "docs/story-0001-uat-signoff-checklist.md"
          "docs/story-0001-implementation-walkthrough.md"
        )
        
        # Check if any Story 0001 files exist in the current commit
        CHANGED_STORY_FILES=()
        for file in "${STORY_0001_FILES[@]}"; do
          if echo "$ALL_FILES" | grep -q "^$file$"; then
            CHANGED_STORY_FILES+=("$file")
          fi
        done
        
        # Set output
        if [ ${#CHANGED_STORY_FILES[@]} -gt 0 ]; then
          echo "story-files-changed=true" >> $GITHUB_OUTPUT
          echo "changed-files=${CHANGED_STORY_FILES[*]}" >> $GITHUB_OUTPUT
          echo "Found ${#CHANGED_STORY_FILES[@]} Story 0001 files in current commit:"
          for file in "${CHANGED_STORY_FILES[@]}"; do
            echo "  - $file"
          done
        else
          echo "story-files-changed=false" >> $GITHUB_OUTPUT
          echo "No Story 0001 files found in current commit"
        fi
    
    - name: Comment on PR (if Story 0001 files changed)
      if: github.event_name == 'pull_request' && steps.detect-changes.outputs.story-files-changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const changedFiles = '${{ steps.detect-changes.outputs.changed-files }}'.split(' ');
            const comment = `## üö® Story 0001 Files Modified
          
          The following Story 0001 core files have been modified in this PR:
          
          ${changedFiles.map(file => `- \`${file}\``).join('\n')}
          
          **‚ö†Ô∏è Regression Testing Required**
          
          Please ensure the following tests are performed:
          - [ ] User signup flow
          - [ ] Email verification
          - [ ] Password reset flow
          - [ ] Login functionality
          - [ ] Database schema changes (if any)
          
          See [Story 0001 Monitoring Guide](docs/story-0001-monitoring-guide.md) for detailed testing procedures.`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
            console.log('‚úÖ Successfully commented on PR');
          } catch (error) {
            console.log('‚ö†Ô∏è Failed to comment on PR:', error.message);
            console.log('This is not a critical failure - the monitoring still works');
          }
    
    - name: Create Issue (if Story 0001 files changed on main/develop)
      if: github.event_name == 'push' && steps.detect-changes.outputs.story-files-changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const changedFiles = '${{ steps.detect-changes.outputs.changed-files }}'.split(' ');
            const issue = {
              title: 'üö® Story 0001 Files Modified - Regression Testing Required',
              body: `## Story 0001 Files Modified on ${context.ref}
            
            The following Story 0001 core files have been modified:
            
            ${changedFiles.map(file => `- \`${file}\``).join('\n')}
            
            **‚ö†Ô∏è Regression Testing Required**
            
            Please ensure the following tests are performed:
            - [ ] User signup flow
            - [ ] Email verification
            - [ ] Password reset flow
            - [ ] Login functionality
            - [ ] Database schema changes (if any)
            
            See [Story 0001 Monitoring Guide](docs/story-0001-monitoring-guide.md) for detailed testing procedures.
            
            **Priority**: High
            **Labels**: regression-testing, story-0001, monitoring`,
              labels: ['regression-testing', 'story-0001', 'monitoring']
            };
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ...issue
            });
            
            console.log('‚úÖ Successfully created issue');
          } catch (error) {
            console.log('‚ö†Ô∏è Failed to create issue:', error.message);
            console.log('This is not a critical failure - the monitoring still works');
            console.log('You may need to check repository permissions for GitHub Actions');
          }
    
    - name: Summary
      run: |
        echo "## Story 0001 Monitoring Summary"
        echo "Event: ${{ github.event_name }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Story 0001 files changed: ${{ steps.detect-changes.outputs.story-files-changed }}"
        if [ "${{ steps.detect-changes.outputs.story-files-changed }}" == "true" ]; then
          echo "Changed files: ${{ steps.detect-changes.outputs.changed-files }}"
        fi